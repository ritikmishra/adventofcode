use regex::Regex;
use std::collections::HashMap;
use std::collections::HashSet;
use itertools::Itertools;

const TILES: &str = "Tile 1249:
...#......
#..#..#.##
##........
#.#.......
..........
#...###...
#..#......
#...##....
..........
.....#...#

Tile 1693:
..#..####.
#.........
##..#....#
#.....#..#
......#.##
#........#
.....##...
.#..##.#.#
##........
###..#....

Tile 1481:
....#####.
#....#..##
##..#....#
##..#...#.
#..#.#...#
..........
...#..#...
.#...#...#
#...#.....
..#..##.##

Tile 3169:
####...#.#
#.#.....#.
.#......##
..#.#....#
...###..#.
#....###.#
.......#..
##.##.....
.#.#......
.#....#...

Tile 1229:
##..###..#
#.......#.
..#..##..#
##..#.....
#.#..#..#.
.#..#.#.##
....#....#
#..#..#.##
....#....#
..##..####

Tile 1489:
#......#..
....#.....
#.....#..#
#.......#.
#.#..#..#.
#.........
#........#
#..#.#....
#.........
....####.#

Tile 2477:
#####.##.#
.###...###
#....#..##
.#.#..#..#
###.##...#
#........#
#..#..#...
.......#.#
#......###
##.##.##.#

Tile 2897:
##.##..#.#
#.......##
#.#..#.#..
..#...#..#
...##.#..#
..#.......
#.#..##..#
..#....#.#
#....#.#.#
#......###

Tile 2083:
..#...##.#
###.#.##..
....##....
#...#..#..
...##....#
#..#......
.#.##.....
..##..####
....###..#
.#...#.#..

Tile 1069:
..#.#.#..#
..#....#.#
.........#
##..#.....
#.....#...
..##......
#..#......
.##..#####
#.#....#..
.....#..#.

Tile 1427:
...####.##
.###......
.#..#.#..#
..#.###.##
.#..#.....
..##.#....
.#......#.
#....#...#
.......#..
#.#..###..

Tile 1429:
.##.#.#.#.
#..##....#
..#......#
...#....##
...#.##..#
..#.#.....
#....#..##
#..#.....#
.##....#..
##.#.#...#

Tile 2357:
#.##..#.##
.........#
#..#.#..##
#....#.#..
#........#
#...##....
#....#....
....##...#
#.#..##...
.###.#.#..

Tile 3181:
...#..####
........#.
#...#...##
#.#.....##
#.........
##...#....
#.##.....#
#....#...#
..#.#...##
#..###.##.

Tile 2887:
.#..#.###.
#.........
.#....#...
#........#
..#.##...#
.......##.
....#.#..#
#...###..#
.#...#..##
###...#..#

Tile 2837:
##.##..###
.......#.#
....#.#..#
.......##.
.....#....
#.#.##..#.
#.#..#...#
....#.##..
..#......#
...######.

Tile 2539:
.###....#.
.......##.
##.##...#.
.###.....#
###..##...
.##....#.#
........#.
..........
.#........
#.....#...

Tile 2399:
##.#..##..
#...#.#..#
.##......#
###..##...
.#....#...
....#.#...
.....###.#
#.......##
#......#..
.##.##....

Tile 2383:
#..##.###.
.#.......#
#.#..#....
#..#.#...#
#.#.#.....
......#...
#....#..#.
..#.#.#..#
#..#.##..#
.#.##...##

Tile 2521:
.#..#.##.#
#........#
#.#...#.##
#........#
##.#.#..##
#..######.
.##..##..#
.#.....##.
.#.#......
..#..#####

Tile 1823:
#.#...##..
#..#.....#
.##......#
#...###.#.
......#...
.....##...
#....##.#.
#.........
#..#.....#
#.#.##.#..

Tile 1301:
####.#.###
#.##...##.
..#...####
..........
#....#..##
....#..#..
#..#.#.#..
...#...#..
###..###.#
.##..#.#.#

Tile 1289:
#.###....#
#.#.....#.
#.....##.#
#........#
.##.#...#.
.###..#...
..#.......
.##...#...
...#....##
.###....#.

Tile 3823:
#.##.##..#
.........#
#...##.#.#
.#.##.....
##.....#..
.#..#....#
#...#...##
#.........
#........#
.#.##.####

Tile 2411:
#.####.###
#....#.###
..##.....#
#.#...#..#
##...#.#.#
##.##...##
#.......#.
#...##...#
.........#
###.##.##.

Tile 1039:
.......#.#
..#.......
........#.
.##...####
##...#..##
.#.......#
..#.#.....
...#.....#
.........#
..#...#...

Tile 1609:
.##..#..##
##.###.###
.#.....#..
#........#
...#...#..
#.......##
...#..###.
#.##.##.##
#.......#.
...#.#....

Tile 2017:
##..#..#..
....###...
..##......
#...#.###.
#....#....
#.#.......
#..#.#....
###..##..#
###.#....#
#.#.#.#.##

Tile 3301:
.#####...#
...##.....
#..###...#
#....#...#
...#.#...#
#......#.#
#........#
...#......
.......#.#
..#####...

Tile 3733:
#####.##.#
#.##..#..#
#....#..##
#....#....
.....##...
#......#..
#....##.##
.........#
.#..#....#
.....##...

Tile 2309:
#..##.##..
...#.#.#.#
#..##.#..#
....##....
##....#..#
##..##.#.#
.###....#.
###...#.##
....#.....
.#.#.###.#

Tile 2879:
#.##.##...
...#.....#
...##.####
...#.#.#.#
#.###.##.#
.....#...#
#.....#.#.
#..#.#..##
.....###..
.##..#.###

Tile 3583:
.#.##...#.
..##...##.
#.#....##.
#.##...#.#
.....#..##
#####.....
..###..#..
..##..#.#.
.##....##.
##.##...#.

Tile 2153:
##...####.
..#.#...#.
##..##..#.
.#..#.#...
..........
..#...#...
#....#.###
...##....#
#.##.....#
#...#....#

Tile 3581:
#...##.###
..####..##
...##....#
.#..#.....
.##......#
#.#......#
...###.#.#
###.#.....
#.##.##...
#.#.....#.

Tile 2927:
##.#.#..##
..........
..........
.....#....
#..#..#..#
....#.#...
.#...#...#
.#...##..#
......#...
###.#.##.#

Tile 2861:
.#..#.###.
#..#....##
#.#.#..#..
........#.
..#.#.#...
...##....#
#..###.#.#
#..#..##..
..#.#....#
.#..####.#

Tile 2851:
#.#....#..
#........#
.#........
#..##.#...
..##....##
.#.......#
#.........
......#..#
..........
###.##..##

Tile 3319:
...##....#
#.......##
##.#..#...
.##....###
#...#...##
..#.......
.###..#..#
#...#.....
.........#
.#..##.#..

Tile 2143:
...#......
##.#...#.#
##.......#
#.##..#..#
..#...#..#
.#.#...#..
..#....#..
......#...
#.#.......
#..#..#.##

Tile 1093:
#.#...#.#.
##..#.....
.........#
##..#...##
##..#..#..
##..##....
##.##....#
#.#....#..
.#.#..#..#
..#.##.###

Tile 3391:
#....#..#.
#...#..#..
##....##..
..#.#..#.#
#####...##
..#..#...#
#.#......#
.#...#....
.....##.##
.#.#.#....

Tile 3917:
...##.#...
#..#.....#
#..##.###.
#.#..#..#.
.####..#.#
..##.#.###
#.#..##.#.
#....##..#
..###.#..#
..##.####.

Tile 1847:
#.##.#..#.
.#.##.....
#.#..#..#.
#....#.#..
.#.......#
..#..#.#.#
..##....##
#.#.##....
##.#..#...
.##.##.###

Tile 1667:
.##..#..#.
###....##.
#.####.#.#
...#.....#
.#.#..##.#
.#..#....#
#.##.#...#
#.#.#.....
...###...#
#.#..####.

Tile 1217:
...#####..
....#..#.#
..#...####
#........#
#........#
###..#...#
.##.##...#
.#.......#
.....##...
.##.#.###.

Tile 3467:
###.##....
.......#.#
.....#..##
##..#....#
....#..#..
....#..###
#......###
#.##...#..
..#.....##
...#.#..#.

Tile 1297:
..###..##.
#....#.#.#
.........#
###.#....#
#......#.#
##....##..
#.#.##..##
.##.....#.
.....#...#
.#.##.....

Tile 3877:
..###.#...
##..#....#
###.##..##
.#..######
....#.#..#
.#.......#
#...##.#..
..#..#....
#.##.##..#
#..##.#.#.

Tile 2389:
##...#####
##..#.#..#
#..#.....#
......#..#
.#........
#....##.#.
.##....#..
#.....#.#.
#........#
...##.#...

Tile 3361:
.....#.#..
.........#
...#....#.
##.##.....
#....##...
##...#...#
#...####.#
..##.....#
...#...#.#
###.####..

Tile 2207:
###.##..#.
#..###....
......#..#
#........#
##....##.#
........#.
...#..#...
#....#..##
...####...
##........

Tile 1997:
..#.#..###
......#...
...#...#..
..#......#
.........#
#....#...#
....#..#..
.....#....
#........#
#....#####

Tile 1063:
#.#...##..
.##..#....
#.#..##...
..#...####
......##..
#...#.#...
####......
.#.....#..
.#.......#
#...####..

Tile 3109:
...###.###
.......#..
......##.#
.#......##
#..##..#..
##..#..#.#
.....##.##
#....#.#.#
.....###..
####....#.

Tile 1097:
#####.##..
.#...#.##.
..#..#....
#..#....#.
#.#....#.#
.#...#.#.#
#....#..##
#....#...#
...#...#..
...#.#..#.

Tile 1117:
#..##.#.##
#.#.....#.
...#.#...#
#.#..##.#.
#.###..#..
#....#...#
....#.....
.#...#...#
..##..#..#
.#.#.....#

Tile 2551:
.#..#.####
#...#.....
##....##.#
#....#....
.##.....#.
.#...#....
#....#.#..
......#...
##.#.#....
.#....#..#

Tile 2677:
.#.####..#
#.#.....##
...#.#....
.#...#...#
.##...#..#
##....#...
...##.#..#
##...#..##
##...#...#
##...###.#

Tile 1367:
.#.##...##
#.#..#....
....##.#..
.........#
.#....##.#
....#.##..
....##...#
#.#..#...#
#.#.#..##.
....#.##.#

Tile 1913:
.##..#..##
.#...##.##
..#.....#.
......#...
...#...##.
...####...
..#..#....
....#.#...
#.........
.####.####

Tile 1709:
.#....##..
..#...#.##
.#......#.
...#....##
.#.##...#.
.#.#.#.###
.........#
#.......#.
##....#...
..#.##.###

Tile 1459:
.##..#.#..
...##.....
.#.#...###
...#.....#
##..#..#.#
.........#
.........#
....#...#.
#..#......
...#.#...#

Tile 2137:
##..#....#
#.#####.#.
......#..#
#.#......#
#...#..#.#
#..#..#.##
###..####.
.##..#...#
#.#.......
.##.##....

Tile 2659:
#.##..#...
#...##....
#...#...#.
#........#
#....#....
.......##.
..#.....#.
#.#..##..#
#......#..
..###.#..#

Tile 2657:
####...##.
........#.
..####..#.
..#.......
....#.#..#
#.#.#.#...
...#....#.
###...####
........##
##.#.#.#..

Tile 2099:
#.###.##.#
#..#...###
..#......#
.#...#.#..
...##.....
###.##...#
..##..#...
...#......
..#.#.#.#.
..#.##....

Tile 3209:
##.###....
...#....#.
#..##..##.
##.##.#...
.#..#....#
#..#.#...#
.#...#...#
#..#......
...#......
..#.#.###.

Tile 1879:
#.##.#.##.
.#.##.#...
#..#.#....
#.....###.
#..##.....
....##....
#..#..#...
#.........
..#.##....
...####.##

Tile 1621:
###....#.#
.........#
.#....##..
.....#.#..
.#...#.#..
##...####.
.....#...#
#.........
....#.#..#
.####...##

Tile 3931:
.####.###.
#.##.....#
#..#.#...#
..#......#
###..#.##.
....##....
#..#......
..........
.#.....#.#
#.##.#..##

Tile 2777:
##....####
.#.#......
##......#.
#.......##
.#..#.#..#
##.#...#.#
##.#.....#
...##....#
#..#.#....
#.#..#....

Tile 2909:
#......##.
#........#
..#.#.###.
.......#.#
........##
....#.....
......#...
#........#
#.......#.
......#.#.

Tile 1777:
.##...####
.##.....#.
#..#.#..#.
.#......##
.#....#..#
#.###.#...
.#.#......
###..#...#
.#.......#
..#...#.##

Tile 3251:
...#.###..
#....##..#
#....#..#.
#....#..##
.....#...#
#.......##
.......#.#
#....#..#.
#...##...#
.#.#.....#

Tile 1601:
#....#....
.##.##...#
.........#
#.........
.#.....###
#..##.#.#.
#......#.#
.#..#.#..#
.#...#....
.#.#.#..##

Tile 1283:
#####.#..#
..#....##.
#..#......
.#....##..
.#.#.....#
##......##
#.....##..
##..#....#
#........#
.#.###..##

Tile 3079:
..#.##....
.......#.#
..#...##.#
..###...#.
#..#.....#
..##.....#
..#..#.#..
.##.#.#..#
#..#......
.#.##..#..

Tile 3793:
##..#####.
##...#....
##....#...
..........
#.........
.#....#..#
#....#..#.
#....#....
###..##...
#.###.##..

Tile 3037:
.##.#..##.
#..#.###..
.#....#...
...####..#
..#.###..#
#.#..#....
.##......#
#.....#..#
#...#.#...
##.######.

Tile 1669:
##.#......
.#......#.
##.#...#.#
#.#.#.#..#
##........
##....#...
#.#.....#.
..........
.........#
####...###

Tile 1087:
.###.#.#.#
###.......
.....#...#
##.....#..
.#.#......
...#......
#...#..#.#
#........#
#..#....##
.#...#####

Tile 2617:
.##..#.#..
.....#...#
..#.#.....
....#...##
####...##.
..##......
...#...#..
..#.#.##.#
#.#.......
###.##....

Tile 3943:
.#.####..#
.........#
#.........
.#........
###..#....
...#....#.
#...#.#...
.#......#.
...##.#...
..##....#.

Tile 2273:
##.#.#...#
...##.#..#
..##......
..#.....#.
#......#..
...#....#.
.##....#.#
...#.#.#..
#..###.#.#
###.#..##.

Tile 3803:
##....#..#
##...#.#.#
..##....#.
#...#..###
....#.....
....#.####
#.....##..
##....###.
#....#..##
#####.##..

Tile 1697:
....####.#
#....#.#.#
#.....#.##
#......#..
#.#...#...
#....#.#..
.##....#..
##...#.#.#
#.#..#..#.
.......#..

Tile 3343:
######.#..
#....##...
#.#.##...#
#...####..
#......#..
##.#..##.#
#.....##.#
..##.##..#
..#......#
###..##...

Tile 1549:
#.##.###.#
.....###..
...#.###..
##...##..#
#.#.......
#.........
....#....#
..#.....##
.....##...
#.#.##.##.

Tile 1619:
..###.###.
##.###...#
#...##...#
....##...#
..##..#.#.
#...#.#..#
#.......##
#..#.....#
....##...#
.#...#.#..

Tile 2971:
..##.###..
#.....#..#
#..#.....#
#..#...#.#
...#......
#......###
#....####.
.#....#...
...#.....#
#...###..#

Tile 3617:
####...#..
.......#.#
.#.#......
#..##..###
.##.......
.#....#..#
.....#.###
....##.#..
#....#...#
.#.##.####

Tile 1543:
......#.##
#......#.#
##.....###
#...#...##
#.#....#..
.#........
#....#....
......##..
##...#..#.
#...#.##.#

Tile 2111:
####..#...
#..#...#.#
#.#.#.##..
##........
#...#..#..
#.##..#...
#.........
##.#..#...
.##.#.###.
#.##.####.

Tile 1499:
#.####.#..
..##.#...#
#..#......
....#.....
.#..##...#
#.#...##.#
...#.##.##
###..#.###
.....#....
...##.##.#

Tile 3461:
.#####.#.#
#.........
..#..#....
..#......#
###...####
...#.##..#
.#........
#..#....##
#...#...##
####.....#

Tile 1483:
.....#.##.
##........
#.#.....#.
##......#.
#.....#...
..#.......
##....#..#
##........
..#...####
......###.

Tile 2467:
###.#.#...
#.#.....#.
#...#....#
#....#...#
...#..#..#
##...#....
#.#.###...
#..##..#.#
#.........
..######.#

Tile 3631:
###.#...##
.........#
#.##..#...
...##..#..
##..#.#..#
#..#.#....
......#.#.
..........
#......##.
..##.#....

Tile 3767:
#...#.#..#
..........
#......#.#
#...#.#..#
##.......#
..#......#
........#.
##...##.##
#........#
....#....#

Tile 2381:
.#.#.##...
#.##.#....
...##.#.##
#.....#.#.
#......#..
...#....#.
......####
#.#.#.....
##...##..#
...#...#.#

Tile 2687:
###...####
.....#.###
..#.#.#.#.
##..#...##
#.###...#.
..#.##..##
##.....#..
##..#..#.#
#...#..#.#
#.#..###.#

Tile 3719:
..####.#..
.#......##
#......###
##....###.
.#...##.##
.#.....#.#
..##..#.#.
#......###
...#...#..
......###.

Tile 3259:
######.#.#
#..#......
.........#
#.......#.
..##...#..
##...##.##
#......#.#
##.......#
#.......#.
#..##.#.##

Tile 3643:
###..#..##
#.#.#.#...
..##....#.
##....##..
..##......
#..#..#.##
......##..
#.......#.
#...##..##
#.#..#.###

Tile 2767:
####....##
..........
.........#
..#....#.#
#......###
#.##..#..#
#.#..#.#..
...#.#...#
#..####..#
##..#####.

Tile 2333:
###..#.##.
..##.....#
..#.#..##.
#.....#..#
....#.#...
##...#....
#.#......#
###.......
#...#....#
..#..#..##

Tile 2857:
..#..##..#
#.....#...
##....#..#
#...##....
....#.#..#
#.#.##....
#...##..#.
.#...##..#
#...#.#...
.#.###.#.#

Tile 1193:
#.#..#.#.#
##..####..
###..##.#.
#.......##
###....##.
...#...#..
#...#....#
##.......#
#####.##.#
..#####.##

Tile 2351:
.##..#####
#.........
.#..#.....
#.##.#...#
..#.#..#..
#.###....#
###..#....
##.......#
#...#..#..
.....#...#

Tile 1129:
..##..####
.....##..#
##........
.........#
#...#.....
....#...##
..#....##.
..#.....#.
..#.......
.##.###...

Tile 3433:
.##..#....
...###.###
.......##.
#..#.#.#.#
........#.
...###...#
...#......
.##...###.
.#.#..#..#
##..##..#.

Tile 1091:
###.####..
.#..#.....
##.......#
#.#...#...
...##.....
#..###...#
..##...#.#
#...#..###
.....#...#
###.#....#

Tile 3407:
.####.#...
.#..#.#..#
..#..#....
......#..#
.........#
#...##...#
...#.###.#
#....#...#
#.....###.
.#.#.#.#..

Tile 2591:
.##..##...
..#...##.#
...#..####
.#....#.##
#...##.#..
#...#....#
#..#.....#
#..#.....#
..........
.#.###.#.#

Tile 3613:
###.######
.#...##..#
#.##.....#
#.........
#...#.....
###.....##
.#.##.#..#
##..#...##
####......
..#...#...

Tile 3967:
#.#..#.#..
#..#.....#
...##...#.
.#.##...#.
#####..#.#
..##.#..#.
..........
#.#.#..#.#
#.#.....##
#..#####.#

Tile 1999:
#.#.#..##.
####.##.##
..##...#.#
....#....#
.##.#.#...
..........
.......##.
#.#......#
##...#.#.#
.#.#.#.#..

Tile 2689:
.#..#####.
.#........
..#....#.#
#......#.#
.#.#..#.##
###...#..#
...#...#.#
##......##
......##.#
.##.#..##.

Tile 3533:
.####.#...
#........#
#......#..
.........#
#..#.##..#
###....#.#
...##..#..
..#.....#.
#...#..###
..###.##.#

Tile 2267:
#.##...#.#
#....#....
.#.#.##...
.#....#.##
..#.#.....
.##.......
##.....#..
####....#.
......#..#
#..##..#.#

Tile 2297:
###..##...
#..##..##.
..#....#.#
#.#.##...#
..#.##..#.
...##...#.
#...#.....
.....#.#.#
#..#....#.
.###..##..

Tile 2711:
##..##...#
...##....#
...#..#.#.
#........#
...#.....#
........##
##....##..
#.##.....#
#.###.....
###...#..#

Tile 1931:
.###...###
......#.##
....##..##
#...#...#.
..#..##.#.
#.....#..#
#...#....#
#........#
...#..#.#.
#.##..###.

Tile 1787:
#...##..##
..#.......
#..#.#.#..
...#..#..#
.##.#..###
#.#.#.....
..........
....##...#
..........
.#.#...#..

Tile 2549:
##.#...###
.....#...#
#......###
##.###....
#..#....#.
##.......#
.#........
..###...##
##..##...#
#.##...#.#

Tile 2789:
#.#.#.#.##
#...#.##..
.##...#.##
#.##.#....
...#......
###.......
#.......##
#.#...#..#
..#.#....#
.##.#..#..

Tile 2707:
#..#.#...#
#.#.#.#...
...#..#..#
##.#.....#
#....#.##.
.....#...#
#.....#...
....#.#...
#..###...#
##..##.###

Tile 3313:
###.#..#..
.#....#..#
...#.....#
....#..###
....#..#..
#..#.#....
##.#..##..
..#...#.##
##..##....
.##.###.#.

Tile 1607:
..#...###.
#.....#...
#.......##
#.....#...
###.#.#..#
#.#.....#.
#..#...###
.........#
..#.......
##.#.#####

Tile 3889:
###.#...##
##.......#
....#..#..
#.#......#
.##......#
#...##....
#....##..#
.......#..
#...#...#.
##.#####.#

Tile 3821:
..###.##..
........##
#..##..#.#
.##.#..#.#
#....##.##
#.....##.#
#.....#..#
##........
#.#..#....
##.#.###..

Tile 3347:
.##..#...#
#.#...#...
#..#..###.
.#......#.
#..###.##.
......#...
##..##.#..
.#.###.#..
........#.
#.###..##.

Tile 1907:
.#.##...#.
#......#..
...#......
##.......#
.#.....#..
.#.....###
........##
.##.#..#.#
##.....#..
#.########

Tile 2903:
##.....#.#
....#.##..
...#.....#
.#..#####.
.....##.#.
.#......#.
..........
#..#.....#
....#...##
.#..##..##

Tile 1399:
#....###.#
..#..#####
.#....##.#
...#...#..
#..##.#..#
.....#....
..#......#
........##
#..###....
#..###.###

Tile 1993:
###.##..#.
##........
##..#..##.
.........#
.........#
#..##.#.#.
.##.......
#..#.....#
#.##.#..##
##.#.#..#.

Tile 3671:
...##.#..#
##....##.#
#..#....##
#..#...#.#
.#.#.#...#
........##
..........
##.......#
#.##....##
.#..#..##.

Tile 3167:
###..##..#
.....##...
.......#..
#...#.#..#
.#.##.#..#
###....##.
##........
#.........
..#..#....
.....##.#.

Tile 1109:
..#...#..#
#..#.#.#..
.#........
.......#.#
#..#..#...
.........#
##.#......
........##
#.#.##..#.
..#..#.#..

Tile 3089:
.###.#####
#..#..#.#.
#......#.#
...#.....#
.........#
.#.#...#..
.#..#.#.##
.......###
.#.#..#.##
..#..###..

Tile 1051:
.....##..#
#...##.#..
..........
..........
#.#.##..#.
...##...##
.##.#####.
.#...##..#
..#.#...#.
#.......##

Tile 2113:
#...###.##
.#.....##.
...#....##
...##..#..
#....#...#
..##.#....
##....#.#.
..#...###.
.....#.#.#
.##......#

Tile 2131:
#....#####
#.#.......
.###.#..##
###.##.#..
#...#.....
.#.#.....#
###....#..
..#.....##
.#...##.##
#..###....";

#[derive(Debug, Clone)]
enum Flipped {
    NotFlipped,
    FlippedHorizontally, // each row is reversed
                         // A vertical flip can be represented by Orientation::Rotated180(FlippedHorizontally)
}

#[derive(Debug, Clone)]
enum Orientation {
    NotRotated(Flipped),
    Rotated90(Flipped),
    Rotated180(Flipped),
    Rotated270(Flipped),
}

#[derive(Debug)]
enum RelativePosition {
    Above,
    Below,
    Left,
    Right,
}

// node in an image
struct ImageNode<'a> {
    left_tile: Option<&'a Tile>,
    right_tile: Option<&'a Tile>,
    bottom_tile: Option<&'a Tile>,
    top_tile: Option<&'a Tile>,
    this_tile: &'a Tile
}

type PixelMap = HashMap<(usize, usize), char>;

#[derive(Debug, Clone)]
struct Tile {
    /// map of (row num, col num) to pixel that is at that location
    pixel_map: PixelMap,
    tile_id: u32,
    orientation: Orientation,
}

const TILE_SIZE: usize = 10;

fn parse_tiles(all_tiles: &str) -> HashMap<u32, Tile> {
    lazy_static! {
        static ref TILE_REGEX: Regex = Regex::new(r"^Tile (\d{4}):\n([\.#\n]*)").unwrap();
    }
    let mut ret = HashMap::new();
    for tile_def in all_tiles.split("\n\n") {
        let tile_captures = TILE_REGEX.captures(tile_def).unwrap();
        let tile_id = tile_captures
            .get(1)
            .unwrap()
            .as_str()
            .parse::<u32>()
            .unwrap();
        let tile = tile_captures.get(2).unwrap().as_str();

        let mut tile_pixel_map: HashMap<(usize, usize), char> = HashMap::new();
        for (i, row) in tile.split("\n").enumerate() {
            for (j, chr) in row.chars().enumerate() {
                tile_pixel_map.insert((i, j), chr);
            }
        }
        ret.insert(
            tile_id,
            Tile {
                tile_id,
                pixel_map: tile_pixel_map,
                orientation: Orientation::NotRotated(Flipped::NotFlipped),
            },
        );
    }
    return ret;
}

fn check_if_boundary_matches(tile_a: &Tile, tile_b: &Tile) -> Option<RelativePosition> {
    check_if_boundary_matches_impl(tile_a, tile_b, false)
}

fn check_if_boundary_matches_impl(
    tile_a: &Tile,
    tile_b: &Tile,
    second: bool,
) -> Option<RelativePosition> {
    // b is above a
    let b_bottom_pixels: PixelMap = tile_b
        .pixel_map
        .iter()
        .filter_map(|(loc, pixel)| {
            if loc.0 == (TILE_SIZE - 1) {
                Some((*loc, *pixel))
            } else {
                None
            }
        })
        .collect();
    let a_top_pixels: PixelMap = tile_a
        .pixel_map
        .iter()
        .filter_map(|(loc, pixel)| {
            if loc.0 == 0 {
                Some((*loc, *pixel))
            } else {
                None
            }
        })
        .collect();

    if a_top_pixels.iter().all(|(location, pixel)| {
        match b_bottom_pixels.get(&(TILE_SIZE - 1, location.1)) {
            Some(b_pixel) => pixel == b_pixel,
            None => false,
        }
    }) {
        return Some(RelativePosition::Above); // b bottom pixels match with a top pixels -> b is above a
    }
    // b is left of a
    let b_left_pixels: PixelMap = tile_b
        .pixel_map
        .iter()
        .filter_map(|(loc, pixel)| {
            if loc.1 == 0 {
                Some((*loc, *pixel))
            } else {
                None
            }
        })
        .collect();
    let a_right_pixels: PixelMap = tile_a
        .pixel_map
        .iter()
        .filter_map(|(loc, pixel)| {
            if loc.1 == (TILE_SIZE - 1) {
                Some((*loc, *pixel))
            } else {
                None
            }
        })
        .collect();

    if a_right_pixels.iter().all(
        |(location, pixel)| match b_left_pixels.get(&(location.0, 0)) {
            Some(b_pixel) => pixel == b_pixel,
            None => false,
        },
    ) {
        return Some(RelativePosition::Right); // b left pixels match with a right pixels -> b is to the right of a
    }

    // b below a or b to the right of a
    if !second {
        match check_if_boundary_matches_impl(tile_b, tile_a, true) {
            Some(a_pos_relative_to_b) => match a_pos_relative_to_b {
                RelativePosition::Above => return Some(RelativePosition::Below),
                RelativePosition::Right => return Some(RelativePosition::Left),
                _ => panic!("how did this happen!"),
            },
            None => return None,
        }
    }
    None
}

fn flip_flipped(flipped: &Flipped) -> Flipped {
    match flipped {
        Flipped::NotFlipped => Flipped::FlippedHorizontally,
        Flipped::FlippedHorizontally => Flipped::NotFlipped,
    }
}

fn flip_orientation(orientation: &Orientation) -> Orientation {
    match orientation {
        Orientation::NotRotated(f) => Orientation::NotRotated(flip_flipped(f)),
        Orientation::Rotated90(f) => Orientation::Rotated90(flip_flipped(f)),
        Orientation::Rotated180(f) => Orientation::Rotated180(flip_flipped(f)),
        Orientation::Rotated270(f) => Orientation::Rotated270(flip_flipped(f)),
    }
}

fn flip_tile(tile_to_flip: &Tile) -> Tile {
    Tile {
        tile_id: tile_to_flip.tile_id,
        orientation: flip_orientation(&tile_to_flip.orientation),
        pixel_map: tile_to_flip
            .pixel_map
            .iter()
            .map(|((row, col), val)| ((*row, TILE_SIZE - 1 - col), *val))
            .collect(),
    }
}

/// rotates counterclockwise
fn rotate_orientation(orientation: &Orientation) -> Orientation {
    match orientation {
        Orientation::NotRotated(f) => Orientation::Rotated90(f.clone()),
        Orientation::Rotated90(f) => Orientation::Rotated180(f.clone()),
        Orientation::Rotated180(f) => Orientation::Rotated270(f.clone()),
        Orientation::Rotated270(f) => Orientation::NotRotated(f.clone()),
    }
}

// rotates a tile by 90 deg
fn rotate_tile_90_deg(tile_to_rot: &Tile) -> Tile {
    Tile {
        tile_id: tile_to_rot.tile_id,
        orientation: rotate_orientation(&tile_to_rot.orientation),
        pixel_map: tile_to_rot
            .pixel_map
            .iter()
            .map(|((row, col), val)| {
                ((TILE_SIZE - 1 - col, *row), *val)
            })
            .collect(),
    }
}

fn print_tile_pixels(tile: &Tile) {
    let map_row_to_col_val_pair: HashMap<usize, HashSet<(usize, char)>> = HashMap::new();
    let mut row_colval_pairs: Vec<(usize, HashSet<(usize, char)>)> = tile
        .pixel_map
        .iter()
        .fold(map_row_to_col_val_pair, |mut acc, ((row, col), val)| {
            match acc.get_mut(row) {
                Some(set) => {
                    set.insert((*col, *val));
                }
                None => {
                    let mut set = HashSet::new();
                    set.insert((*col, *val));
                    acc.insert(*row, set);
                }
            };
            return acc;
        })
        .iter()
        .map(|(a, b)| (*a, b.clone()))
        .collect();

    row_colval_pairs.sort_by_key(|el| el.0);

    for (_row, colset) in row_colval_pairs {
        let mut sorted_col_values: Vec<(usize, char)> = colset
            .iter()
            .map(|(col, pixelval)| (*col, *pixelval))
            .collect();
        sorted_col_values.sort_by_key(|el| el.0);
        for (_col, pixelval) in sorted_col_values {
            print!("{}", pixelval);
        }
        print!("\n");
    }
}

/// tries ALL of the combinations
fn check_if_two_tiles_fit(tile_a: &Tile, tile_b: &Tile) -> Option<(RelativePosition, Option<Tile>)> {
    let mut tile_b_transformed: Tile = tile_b.clone();
    for i in 0..4 {
        match check_if_boundary_matches(tile_a, &tile_b_transformed) {
            Some(pos) => return Some((pos, if i == 0 { None } else { Some(tile_b_transformed) })),
            None => {}
        };
        tile_b_transformed = rotate_tile_90_deg(&tile_b_transformed);
    }

    // flip tile_b and try again
    tile_b_transformed = flip_tile(&tile_b_transformed);
    for _ in 0..4 {
        match check_if_boundary_matches(tile_a, &tile_b_transformed) {
            Some(pos) => return Some((pos, Some(tile_b_transformed))),
            None => {}
        };
        tile_b_transformed = rotate_tile_90_deg(&tile_b_transformed);
    }
    return None
}

pub fn day20_main() {
    let selected_tiles = "Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...";

    // let selected_tiles = TILES;
    // Part 1
    let parsed_tiles = parse_tiles(selected_tiles);

    // print_tile_pixels(&flip_tile(parsed_tiles.get(&1234).unwrap()));

    let mut image_nodes: HashMap<u32, ImageNode> = HashMap::new();
    let mut corner_ids = HashSet::new();
    for (a_id, tile_a) in parsed_tiles.iter() {
        let mut count = 0;
        for (b_id, tile_b) in parsed_tiles.iter() {
            if a_id == b_id {
                continue;
            }
            match check_if_two_tiles_fit(tile_a, tile_b) {
                Some(_) => {
                    count += 1;
                },
                None => {}
            }
        }
        if count == 2 {
            println!("{} is a corner", a_id);
            corner_ids.insert(*a_id as u64);
        }
    }
    println!("part 1 corner id product: {}", corner_ids.iter().product::<u64>())
    // Now that we have the tiles, we need to figure out how they should be arranged
}

/*
#...##.#.. ..###..### #.#.#####.
..#.#..#.# ###...#.#. .#..######
.###....#. ..#....#.. ..#.......
###.##.##. .#.#.#..## ######....
.###.##### ##...#.### ####.#..#.
.##.#....# ##.##.###. .#...#.##.
#...###### ####.#...# #.#####.##
.....#..## #...##..#. ..#.###...
#.####...# ##..#..... ..#.......
#.##...##. ..##.#..#. ..#.###...

#.##...##. ..##.#..#. ..#.###...
##..#.##.. ..#..###.# ##.##....#
##.####... .#.####.#. ..#.###..#
####.#.#.. ...#.##### ###.#..###
.#.####... ...##..##. .######.##
.##..##.#. ....#...## #.#.#.#...
....#..#.# #.#.#.##.# #.###.###.
..#.#..... .#.##.#..# #.###.##..
####.#.... .#..#.##.. .######...
...#.#.#.# ###.##.#.. .##...####

...#.#.#.# ###.##.#.. .##...####
..#.#.###. ..##.##.## #..#.##..#
..####.### ##.#...##. .#.#..#.##
#..#.#..#. ...#.#.#.. .####.###.
.#..####.# #..#.#.#.# ####.###..
.#####..## #####...#. .##....##.
##.##..#.. ..#...#... .####...#.
#.#.###... .##..##... .####.##.#
#...###... ..##...#.. ...#..####
..#.#....# ##.#.#.... ...##.....

*/
